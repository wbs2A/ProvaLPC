/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 16);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/vendorTemplate/js/superfish.js":
/*!*****************************************************!*\
  !*** ./resources/js/vendorTemplate/js/superfish.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n * jQuery Superfish Menu Plugin - v1.7.9\n * Copyright (c) 2016 Joel Birch\n *\n * Dual licensed under the MIT and GPL licenses:\n *\thttp://www.opensource.org/licenses/mit-license.php\n *\thttp://www.gnu.org/licenses/gpl.html\n */\n;\n\n(function ($, w) {\n  \"use strict\";\n\n  var methods = function () {\n    // private properties and methods go here\n    var c = {\n      bcClass: 'sf-breadcrumb',\n      menuClass: 'sf-js-enabled',\n      anchorClass: 'sf-with-ul',\n      menuArrowClass: 'sf-arrows'\n    },\n        ios = function () {\n      var ios = /^(?![\\w\\W]*Windows Phone)[\\w\\W]*(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n\n      if (ios) {\n        // tap anywhere on iOS to unfocus a submenu\n        $('html').css('cursor', 'pointer').on('click', $.noop);\n      }\n\n      return ios;\n    }(),\n        wp7 = function () {\n      var style = document.documentElement.style;\n      return 'behavior' in style && 'fill' in style && /iemobile/i.test(navigator.userAgent);\n    }(),\n        unprefixedPointerEvents = function () {\n      return !!w.PointerEvent;\n    }(),\n        toggleMenuClasses = function toggleMenuClasses($menu, o, add) {\n      var classes = c.menuClass,\n          method;\n\n      if (o.cssArrows) {\n        classes += ' ' + c.menuArrowClass;\n      }\n\n      method = add ? 'addClass' : 'removeClass';\n      $menu[method](classes);\n    },\n        setPathToCurrent = function setPathToCurrent($menu, o) {\n      return $menu.find('li.' + o.pathClass).slice(0, o.pathLevels).addClass(o.hoverClass + ' ' + c.bcClass).filter(function () {\n        return $(this).children(o.popUpSelector).hide().show().length;\n      }).removeClass(o.pathClass);\n    },\n        toggleAnchorClass = function toggleAnchorClass($li, add) {\n      var method = add ? 'addClass' : 'removeClass';\n      $li.children('a')[method](c.anchorClass);\n    },\n        toggleTouchAction = function toggleTouchAction($menu) {\n      var msTouchAction = $menu.css('ms-touch-action');\n      var touchAction = $menu.css('touch-action');\n      touchAction = touchAction || msTouchAction;\n      touchAction = touchAction === 'pan-y' ? 'auto' : 'pan-y';\n      $menu.css({\n        'ms-touch-action': touchAction,\n        'touch-action': touchAction\n      });\n    },\n        getMenu = function getMenu($el) {\n      return $el.closest('.' + c.menuClass);\n    },\n        getOptions = function getOptions($el) {\n      return getMenu($el).data('sfOptions');\n    },\n        over = function over() {\n      var $this = $(this),\n          o = getOptions($this);\n      clearTimeout(o.sfTimer);\n      $this.siblings().superfish('hide').end().superfish('show');\n    },\n        close = function close(o) {\n      o.retainPath = $.inArray(this[0], o.$path) > -1;\n      this.superfish('hide');\n\n      if (!this.parents('.' + o.hoverClass).length) {\n        o.onIdle.call(getMenu(this));\n\n        if (o.$path.length) {\n          $.proxy(over, o.$path)();\n        }\n      }\n    },\n        out = function out() {\n      var $this = $(this),\n          o = getOptions($this);\n\n      if (ios) {\n        $.proxy(close, $this, o)();\n      } else {\n        clearTimeout(o.sfTimer);\n        o.sfTimer = setTimeout($.proxy(close, $this, o), o.delay);\n      }\n    },\n        touchHandler = function touchHandler(e) {\n      var $this = $(this),\n          o = getOptions($this),\n          $ul = $this.siblings(e.data.popUpSelector);\n\n      if (o.onHandleTouch.call($ul) === false) {\n        return this;\n      }\n\n      if ($ul.length > 0 && $ul.is(':hidden')) {\n        $this.one('click.superfish', false);\n\n        if (e.type === 'MSPointerDown' || e.type === 'pointerdown') {\n          $this.trigger('focus');\n        } else {\n          $.proxy(over, $this.parent('li'))();\n        }\n      }\n    },\n        applyHandlers = function applyHandlers($menu, o) {\n      var targets = 'li:has(' + o.popUpSelector + ')';\n\n      if ($.fn.hoverIntent && !o.disableHI) {\n        $menu.hoverIntent(over, out, targets);\n      } else {\n        $menu.on('mouseenter.superfish', targets, over).on('mouseleave.superfish', targets, out);\n      }\n\n      var touchevent = 'MSPointerDown.superfish';\n\n      if (unprefixedPointerEvents) {\n        touchevent = 'pointerdown.superfish';\n      }\n\n      if (!ios) {\n        touchevent += ' touchend.superfish';\n      }\n\n      if (wp7) {\n        touchevent += ' mousedown.superfish';\n      }\n\n      $menu.on('focusin.superfish', 'li', over).on('focusout.superfish', 'li', out).on(touchevent, 'a', o, touchHandler);\n    };\n\n    return {\n      // public methods\n      hide: function hide(instant) {\n        if (this.length) {\n          var $this = this,\n              o = getOptions($this);\n\n          if (!o) {\n            return this;\n          }\n\n          var not = o.retainPath === true ? o.$path : '',\n              $ul = $this.find('li.' + o.hoverClass).add(this).not(not).removeClass(o.hoverClass).children(o.popUpSelector),\n              speed = o.speedOut;\n\n          if (instant) {\n            $ul.show();\n            speed = 0;\n          }\n\n          o.retainPath = false;\n\n          if (o.onBeforeHide.call($ul) === false) {\n            return this;\n          }\n\n          $ul.stop(true, true).animate(o.animationOut, speed, function () {\n            var $this = $(this);\n            o.onHide.call($this);\n          });\n        }\n\n        return this;\n      },\n      show: function show() {\n        var o = getOptions(this);\n\n        if (!o) {\n          return this;\n        }\n\n        var $this = this.addClass(o.hoverClass),\n            $ul = $this.children(o.popUpSelector);\n\n        if (o.onBeforeShow.call($ul) === false) {\n          return this;\n        }\n\n        $ul.stop(true, true).animate(o.animation, o.speed, function () {\n          o.onShow.call($ul);\n        });\n        return this;\n      },\n      destroy: function destroy() {\n        return this.each(function () {\n          var $this = $(this),\n              o = $this.data('sfOptions'),\n              $hasPopUp;\n\n          if (!o) {\n            return false;\n          }\n\n          $hasPopUp = $this.find(o.popUpSelector).parent('li');\n          clearTimeout(o.sfTimer);\n          toggleMenuClasses($this, o);\n          toggleAnchorClass($hasPopUp);\n          toggleTouchAction($this); // remove event handlers\n\n          $this.off('.superfish').off('.hoverIntent'); // clear animation's inline display style\n\n          $hasPopUp.children(o.popUpSelector).attr('style', function (i, style) {\n            return style.replace(/display[^;]+;?/g, '');\n          }); // reset 'current' path classes\n\n          o.$path.removeClass(o.hoverClass + ' ' + c.bcClass).addClass(o.pathClass);\n          $this.find('.' + o.hoverClass).removeClass(o.hoverClass);\n          o.onDestroy.call($this);\n          $this.removeData('sfOptions');\n        });\n      },\n      init: function init(op) {\n        return this.each(function () {\n          var $this = $(this);\n\n          if ($this.data('sfOptions')) {\n            return false;\n          }\n\n          var o = $.extend({}, $.fn.superfish.defaults, op),\n              $hasPopUp = $this.find(o.popUpSelector).parent('li');\n          o.$path = setPathToCurrent($this, o);\n          $this.data('sfOptions', o);\n          toggleMenuClasses($this, o, true);\n          toggleAnchorClass($hasPopUp, true);\n          toggleTouchAction($this);\n          applyHandlers($this, o);\n          $hasPopUp.not('.' + c.bcClass).superfish('hide', true);\n          o.onInit.call(this);\n        });\n      }\n    };\n  }();\n\n  $.fn.superfish = function (method, args) {\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (_typeof(method) === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      return $.error('Method ' + method + ' does not exist on jQuery.fn.superfish');\n    }\n  };\n\n  $.fn.superfish.defaults = {\n    popUpSelector: 'ul,.sf-mega',\n    // within menu context\n    hoverClass: 'sfHover',\n    pathClass: 'overrideThisToUse',\n    pathLevels: 1,\n    delay: 800,\n    animation: {\n      opacity: 'show'\n    },\n    animationOut: {\n      opacity: 'hide'\n    },\n    speed: 'normal',\n    speedOut: 'fast',\n    cssArrows: true,\n    disableHI: false,\n    onInit: $.noop,\n    onBeforeShow: $.noop,\n    onShow: $.noop,\n    onBeforeHide: $.noop,\n    onHide: $.noop,\n    onIdle: $.noop,\n    onDestroy: $.noop,\n    onHandleTouch: $.noop\n  };\n})(jQuery, window);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/vendorTemplate/js/superfish.js\n");

/***/ }),

/***/ 16:
/*!***********************************************************!*\
  !*** multi ./resources/js/vendorTemplate/js/superfish.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\ProvaLPC\resources\js\vendorTemplate\js\superfish.js */"./resources/js/vendorTemplate/js/superfish.js");


/***/ })

/******/ });