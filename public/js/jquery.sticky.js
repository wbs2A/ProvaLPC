/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/vendorTemplate/js/jquery.sticky.js":
/*!*********************************************************!*\
  !*** ./resources/js/vendorTemplate/js/jquery.sticky.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Sticky Plugin v1.0.0 for jQuery\n// =============\n// Author: Anthony Garand\n// Improvements by German M. Bravo (Kronuz) and Ruud Kamphuis (ruudk)\n// Improvements by Leonardo C. Daronco (daronco)\n// Created: 2/14/2011\n// Date: 2/12/2012\n// Website: http://labs.anthonygarand.com/sticky\n// Description: Makes an element on the page stick on the screen as you scroll\n//       It will only set the 'top' and 'position' of your element, you\n//       might need to adjust the width in some cases.\n(function ($) {\n  var defaults = {\n    topSpacing: 0,\n    bottomSpacing: 0,\n    className: 'is-sticky',\n    wrapperClassName: 'sticky-wrapper',\n    center: false,\n    getWidthFrom: '',\n    responsiveWidth: false\n  },\n      $window = $(window),\n      $document = $(document),\n      sticked = [],\n      windowHeight = $window.height(),\n      scroller = function scroller() {\n    var scrollTop = $window.scrollTop(),\n        documentHeight = $document.height(),\n        dwh = documentHeight - windowHeight,\n        extra = scrollTop > dwh ? dwh - scrollTop : 0;\n\n    for (var i = 0; i < sticked.length; i++) {\n      var s = sticked[i],\n          elementTop = s.stickyWrapper.offset().top,\n          etse = elementTop - s.topSpacing - extra;\n\n      if (scrollTop <= etse) {\n        if (s.currentTop !== null) {\n          s.stickyElement.css('width', '').css('position', '').css('top', '');\n          s.stickyElement.trigger('sticky-end', [s]).parent().removeClass(s.className);\n          s.currentTop = null;\n        }\n      } else {\n        var newTop = documentHeight - s.stickyElement.outerHeight() - s.topSpacing - s.bottomSpacing - scrollTop - extra;\n\n        if (newTop < 0) {\n          newTop = newTop + s.topSpacing;\n        } else {\n          newTop = s.topSpacing;\n        }\n\n        if (s.currentTop != newTop) {\n          s.stickyElement.css('width', s.stickyElement.width()).css('position', 'fixed').css('top', newTop);\n\n          if (typeof s.getWidthFrom !== 'undefined') {\n            s.stickyElement.css('width', $(s.getWidthFrom).width());\n          }\n\n          s.stickyElement.trigger('sticky-start', [s]).parent().addClass(s.className);\n          s.currentTop = newTop;\n        }\n      }\n    }\n  },\n      resizer = function resizer() {\n    windowHeight = $window.height();\n\n    for (var i = 0; i < sticked.length; i++) {\n      var s = sticked[i];\n\n      if (typeof s.getWidthFrom !== 'undefined' && s.responsiveWidth === true) {\n        s.stickyElement.css('width', $(s.getWidthFrom).width());\n      }\n    }\n  },\n      methods = {\n    init: function init(options) {\n      var o = $.extend({}, defaults, options);\n      return this.each(function () {\n        var stickyElement = $(this);\n        var stickyId = stickyElement.attr('id');\n        var wrapperId = stickyId ? stickyId + '-' + defaults.wrapperClassName : defaults.wrapperClassName;\n        var wrapper = $('<div></div>').attr('id', stickyId + '-sticky-wrapper').addClass(o.wrapperClassName);\n        stickyElement.wrapAll(wrapper);\n\n        if (o.center) {\n          stickyElement.parent().css({\n            width: stickyElement.outerWidth(),\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n          });\n        }\n\n        if (stickyElement.css(\"float\") == \"right\") {\n          stickyElement.css({\n            \"float\": \"none\"\n          }).parent().css({\n            \"float\": \"right\"\n          });\n        }\n\n        var stickyWrapper = stickyElement.parent();\n        stickyWrapper.css('height', stickyElement.outerHeight());\n        sticked.push({\n          topSpacing: o.topSpacing,\n          bottomSpacing: o.bottomSpacing,\n          stickyElement: stickyElement,\n          currentTop: null,\n          stickyWrapper: stickyWrapper,\n          className: o.className,\n          getWidthFrom: o.getWidthFrom,\n          responsiveWidth: o.responsiveWidth\n        });\n      });\n    },\n    update: scroller,\n    unstick: function unstick(options) {\n      return this.each(function () {\n        var unstickyElement = $(this);\n        var removeIdx = -1;\n\n        for (var i = 0; i < sticked.length; i++) {\n          if (sticked[i].stickyElement.get(0) == unstickyElement.get(0)) {\n            removeIdx = i;\n          }\n        }\n\n        if (removeIdx != -1) {\n          sticked.splice(removeIdx, 1);\n          unstickyElement.unwrap();\n          unstickyElement.removeAttr('style');\n        }\n      });\n    }\n  }; // should be more efficient than using $window.scroll(scroller) and $window.resize(resizer):\n\n\n  if (window.addEventListener) {\n    window.addEventListener('scroll', scroller, false);\n    window.addEventListener('resize', resizer, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('onscroll', scroller);\n    window.attachEvent('onresize', resizer);\n  }\n\n  $.fn.sticky = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (_typeof(method) === 'object' || !method) {\n      return methods.init.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\n    }\n  };\n\n  $.fn.unstick = function (method) {\n    if (methods[method]) {\n      return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n    } else if (_typeof(method) === 'object' || !method) {\n      return methods.unstick.apply(this, arguments);\n    } else {\n      $.error('Method ' + method + ' does not exist on jQuery.sticky');\n    }\n  };\n\n  $(function () {\n    setTimeout(scroller, 0);\n  });\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/vendorTemplate/js/jquery.sticky.js\n");

/***/ }),

/***/ 9:
/*!***************************************************************!*\
  !*** multi ./resources/js/vendorTemplate/js/jquery.sticky.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\xampp\htdocs\ProvaLPC\resources\js\vendorTemplate\js\jquery.sticky.js */"./resources/js/vendorTemplate/js/jquery.sticky.js");


/***/ })

/******/ });